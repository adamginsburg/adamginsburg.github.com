<html><head><link href="style.css" rel="stylesheet" type="text/css"/><link href="favicon8.ico" rel="icon" type="image/gif"/><title> Astronomy 3520: Unix and the command line </title></head><body>
<h1><center> ASTR 3520: Introduction to Unix and the command line</center></h1>
<br/>
<table align="center" width="800"><tr><td>
<br/> I have not found any very good, simple introductions to unix and the
command line.  For the purpose of this class, I'm going to outline how to do
some very simple operations.  I think the best way to learn is directly from
someone else - watch over someone's shoulder in lab or when working with a
group, and ask "How did you do that?" when you see something that you want to
know.  Feel free to e-mail questions to Adam.
<br/>
<br/><h3> Starting IRAF </h3>
<br/> On the cosmos machines, you need to be in a terminal (most likely an
"xterm") to access IRAF and most useful commands.  To do this, right-click on
the desktop,  navigate to the "Tools" menu, and click "Terminal."
<br/>To access IRAF, you need to open an xgterm (X graphics terminal).  Type "xgterm &amp;" and press enter.
<br/>If you have never used iraf before, you need to create a login.cl file in your home directory.  This can be done by running the "mkiraf" script.  Type "mkiraf" and press enter.
<br/>IRAF needs to run from within a c shell (csh), and while this should happen automatically, it doesn't hurt to be sure.  Type "csh" and press enter.
<br/>Finally, to open IRAF, type "cl" and press enter.  You should now be at an IRAF cl&gt; prompt.
<br/>
<br/><h3> Opening .tar files </h3>
<br/> To make downloading a large number of files simpler, we put them into a tar
archive file.  "tarballs" are similar to zip files on windows and are an
effective way to put a whole folder into a single file.  To extract a tar file,
use the command 
<br/> tar -xf (filename)
<br/>If there is a .tgz or .tar.gz file, you
can use the command 
<br/> tar -xzf (filename.tar.gz) 
<br/>or 
<br/> gunzip (filename.tar.gz)
<br/> tar -xf (filename.tar)
<br/>
<br/><h3> General UNIX instructions </h3>
<br/>
<br/> Amy Bender included some UNIX introductions on her ASTR 3510 page: 
<br/> <a class="norm" href="http://casa.colorado.edu/~benderan/teaching/astr3510/unix.pdf">Brian Keeney's Introduction to Unix (pdf)</a>
<br/> <a class="norm" href="http://casa.colorado.edu/~benderan/teaching/astr3510/unixintro.ps">Amy Bender's Introduction to Unix (ps) </a>
<br/>
<br/> I'm also a fan of <a class="norm" href="http://www.ifa.hawaii.edu/~joshw/classes/UNIXintro.pdf">Josh Walawender's Introduction to Unix (pdf)</a>
<br/>
<br/> <br/>
<h3 id="sed"> Understanding SED:</h3>
There are many worthwhile advanced unix tools, my favorite being sed,
the stream editor, awk, and <a href="http://imgs.xkcd.com/comics/regular_expressions.png">perl</a>.  SED takes lines of text and applies specified
edits to them before they are output.  AWK similarly runs through lines of text,
but is more flexible and complicated.  Perl is a programming language that is
significantly more powerful than awk and sed, but it requires a little learning
to use and is not good for one-liners.  However, it is probably the easiest
beginner programming language - it is relatively tolerant of being imprecise.
<br/>
<br/>What does the command <tt>!sed -e 's/\.FIT/\.fits/g' list_fit &gt; list_fits </tt> do? <ol>
 The <tt>!</tt> at the beginning of the line means that the command is being run in the unix terminal instead of IRAF
<br/> <tt>sed</tt> is the command
<br/> <tt>-e</tt> is an optional parameter that is not strictly necessary in this case, it allows you to specify an <tt>e</tt>xpression
<br/> <tt>'s/\.FIT/\.fits/g'</tt> is the meat of the code, it is a <a class="norm" href="http://en.wikipedia.org/wiki/Regular_expression">regular expression</a>.
<ol>
  <tt>s</tt> means "substitute" the second string for the first
<br/>  <tt>/\.FIT/</tt> specifies the first string.  
<br/>  The <tt>/</tt>'s specify the boundary of the expression. <tt>\</tt> is the <a href="http://xkcd.com/234/">escape</a> operation, it is needed because <tt>.</tt> is treated as a wildcard otherwise
<br/>  Similarly,<tt>/\.fits/</tt> specifies the second string.  
<br/>  <tt>g</tt> means every occurence of the first string on the line will be replaced, not just the first occurrence
</ol>
 <tt>list_fit</tt> is your original file with .FIT images listed
<br/> <tt> &gt; </tt> redirects your output to the second file
<br/> <tt>list_fits</tt> is your target file with .fits images listed where .FIT were listed previously
</ol>
<br/>
<br/><a class="norm" href="http://www.csse.monash.edu.au/~greif/cse2_3391/sedhmc.html">Getting started with SED</a>
<br/><a class="norm" href="http://www.csse.monash.edu.au/~greif/cse2_3391/sed.html">SED reference</a>
<br/><a class="norm" href="http://sparky.rice.edu/~hartigan/sed.html">Pat Hartigan's SED page</a>
<br/><a class="norm" href="http://sparky.rice.edu/~hartigan/awk.html">Pat Hartigan's AWK page</a>
<br/><a class="norm" href="http://www.xkcd.com/149/">A brief description of the sudo command</a>
<br/>
<br/>
<script src="navbar.js" type="text/javascript"></script><script type="text/javascript">document.write(navbar())</script>
</td></tr></table></body><head><script src="./googleanalytics.js" type="text/javascript"></script></head></html>