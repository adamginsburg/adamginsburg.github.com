<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<link rel="stylesheet" type="text/css" href="style.css">
<link href="prettify.css" type="text/css" rel="stylesheet">
<script type="text/javascript" src="prettify.js"></script>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Reducing APO spectra: TripleSpec </title>
</head>
<?php 
$page="APO_reduction_tspec.htm";
include 'tracker.php';?>
<body onload="prettyPrint()"> 
<table align="center" width=800><tr><td>
<center>
<h1> Triplespec </h1>
<h2> WARNING: as of 9/29/09, I have discovered a number of inadequacies / holes in the pipeline.  You can't
  really follow these directions straightforwardly towards a final reduced product.  I'm working on fixing that. </h2>
</center>
Below is code using IRAF to create a full 2D wavelength solution for TripleSpec
data.  It also rectifies spectral lines to be vertical.
<br>
<br> Caveats: 
<ul><li> The calibration step does not account for atmospheric absorption dips, 
    e.g. those around 2-2.1 microns (this is a limitation of IRAF - the sensitivity
    funciton has to be a functional fit, and even very high-order spline fits fail 
    on those)
    <li> Telluric correction is not done carefully.  To really do it right, you need
    a high-resolution absorption spectrum and you need to deconvolve narrow lines to see
    where they fall on the absorption spectrum.  This might not be possible at all; the
    closest we can get is probably taking the TSPEC spectrum of the A0 calibrator
    and using that as our transmission spectrum.
    <li> This code has only been tested for one set of data.  
    <li> I'm a beginner at writing IRAF scripts so the code may not be fully robust
    <li> I'm not sure how to get accurate error estimation. In particular, I
    don't know how well poisson statistics are conserved when pixels are
    resized.  
    <li> The pipeline currently only extracts JHK orders.  It is certainly possible
    to add in an extraction of the other orders; if there's enough demand / incentive
    I'll do it.
    <li> Unless you understand IRAF, there are probably parts of this 'manual' that are
    thoroughly inadequate.  Again, with adequate demand/incentive, I can produce a better
    set of instructions with a few days of work.
</ul>
<br>
<br> Description of pipeline process:
<ol> 
    <li> Copy each order of a reference star exposure into an individual image
    <li> Copy each order of the target observations into individual images
    <li> Use a (prefereably starless) image to extract the wavelength calibration with <code> identify </code> (INTERACTIVE)
    <li> Use a star image to extract the slit curvature with <code> identify </code> (INTERACTIVE)
    <li> Use <code>fitcoords</code> to create a transformation to apply to the image to rectify the lines and slit curvature (INTERACTIVE)
    <li> Apply rectification to data
    <li> Use <code>standard</code> to compute the calibration to convert data units to flux density units (INTERACTIVE)
    <li> Compute sensitivity function with <code> sensfunc </code> (INTERACTIVE)
    <li> Apply sensitivity function
</ol>
<br> Example position-velocity diagram extracted from pipeline-reduced product:
<a href="apo/outflow1.png"><img src='apo/outflow1.png' width=400></a>
<br>
<br> Instructions for use:
<ol> 
    <li> pour yourself some triplesec
    <li> Download these files: 
    <ul><li><a class="norm" href="apo/bpm.fits">bpm.fits </a>  (bad pixel mask)
        <li><a class="norm" href="pipeline_jhk.cl"> pipeline_jhk.cl </a>
        <li><a class="norm" href="apo/idsample_id_J"> idsample_id_J </a> (put in ./database/)
        <li><a class="norm" href="apo/idsample_id_H"> idsample_id_H </a> (put in ./database/)
        <li><a class="norm" href="apo/idsample_id_K"> idsample_id_K </a> (put in ./database/)
        <li><a class="norm" href="apo/sample_id_J.fits"> sample_id_J.fits </a> 
        <li><a class="norm" href="apo/sample_id_H.fits"> sample_id_H.fits </a> 
        <li><a class="norm" href="apo/sample_id_K.fits"> sample_id_K.fits </a> 
    </ul>
    <li> load IRAF and start entering commands as follows...
    <li> <code> onedspec </code>
    <li> <code> twodspec </code>
    <li> <code> longslit </code>
    <li> <code> cp /path/to/bpm.fits . </code> (bad pixel mask)
    <li> <code> task pipeline_jhk=/full/path/to/pipeline_jhk.cl </code> (load pipeline code)
    <li> <code> ls reference_star_filename* | sed 's/\.fits//' > refstarlist </code>
    <li> <code> pipeline_jhk refstarlist refstarOUTname justcrop=yes background=no combine=no  </code>
    <li> <code> ls starless_image_filename* | sed 's/\.fits//' > starless_imagelist </code>
    <li> <code> pipeline_jhk starless_imagelist starless_imageOUTname justcrop=yes background=no combine=no  </code>
    <!--    <li> <code> identify [starless image[JHK]] coordlist=linelists$ohlines.dat  </code> -->
    <li> <code> reidentify sample_id_[JHK] [starless image[JHK]] coordlist=linelists$ohlines.dat nlost=10 ver+ shift=INDEF search=10.0 trace=yes </code> *
    <li> <code> identify [reference star image[JHK]] section="middle column" coordlist="" units=""</code> **
    <li> <code> reidentify [reference star image[JHK]] [reference star image[JHK]] section="middle column" coordlist="" nlost=10 ver+ </code>
    <li> <code> fitcoords [starless image[JHK]] fitname="skylines[JHK]" combine=yes xo=6 yo=2 interactive +</code>
    <li> <code> fitcoords [reference star image[JHK]] fitname="stars[JHK]" combine=yes xo=6 yo=2 interactive +</code>
    <li> <code> pipeline_jhk refstarlist refstarOUTname </code>
    <li> <code> standard refstarOUTname_[JHK]_combine output="std[JHK]" star_name="[JHK]"  caldir="onedstds$blackbody/" </code>
    <li> <code> sensfunc std[JHK] sens[JHK] </code>
    <li> <code> pipeline_jhk objectlist_A objectOUTname_A calibrate=yes </code>  (repeat for each object)
    <li> <code> pipeline_jhk objectlist_B objectOUTname_B calibrate=yes </code>  (repeat for each object)
    <li> extract your spectrum with <code>apall</code> and/or continue analysis some other way <code>  </code>
</ol>
<br> *: You may have to play with these parameters, but given the files I've
provided, you should be able to automatically identify the OH lines without
difficulty.  <code>interactive</code> is set to <code>yes</code> so that you
can make sure the solution is reasonable before moving on.
<br>
<br> **: in this step, make sure to identify stars at DIFFERENT positions on
the slit.  When you identify them, assign them numbers in the range 0-100.  If
you've nodded the slit in the standard ABBA pattern, 25 and 75 are good numbers
to assign.  Make sure you assign the same numbers to the star in each order
(i.e. the star lower in the slit should be 25 in J, H, and K).  This
information is used to remap the curved orders to be linear.  If you know the distance
between the objects in arcseconds, it would be sensible to make the difference in their
positions equal to the difference in arcseconds (or sensible fractions of an arcsecond)
so that your spatial units are sky-based units.
<br>
<br> Also, you may have to directly edit the database/idstars[JHK] files to change
the units to be BLANK (i.e. a line should read "units" with nothing after it).
It's not essential, but I find it annoying to have programs try to read out a
spatial direction as "angstroms"
<br>
<br> To do:
<ul>
    <li> Measure curvature across the slit more precisely.  This requires
    observations of a bright source at more positions along the slit.
    <li> Create general-use calibration files to reduce interactivity above
    <li> add orders
</ul>
<br>
<br> DOWNLOAD LINK: <a class="norm" href="apo/pipeline_jhk.cl"> pipeline_jhk.cl </a>
<br>
<br> CODE:
<br>
</td></tr><tr><td>
<code class="prettyprint">
    <? readfile("apo/pipeline_jhk.cl"); ?>
</code>
<center>
<br><br><hr>
<br>
<?php include 'navbar.php';?>
</body>
</html>

